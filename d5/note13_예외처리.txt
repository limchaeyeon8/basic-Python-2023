예외 ; Exception
: 실행중에 발생할 수 있는 로직적 실수
    - 프로그램이 정상적으로 실행되지 않고 멈추게 되는 실수

    - 오류가 처리되지 않으면 프로그램 자체가 아예 실행되지 않고
    무조건 오류를 처리를 해야 동작하기 때문에 납품에는 문제x
    - 잘 사용하다가 갑자기 "예외가 발생하게 되면 신뢰도 ↓"

# ZeroDivisionError == 예외

 @원사적인 예외처리
if y == 0:
    print('y에 0을 넣지마세요')     @ 예외처리(1)   # ZeroDivisionError 고치지만 add, mul 수행이 안 됨
    exit()

try:
    print(div(x, y))                @ 예외처리(2-1)   # add, mul만 수행
except:
    print('나누기 실패 : 0으로 나누려고 했습니다.')  @ 예외처리(2-2)   # div 실패에 대한 메시지

except Exception as e:              @예외처리(2-3)   # Exception 클래스로 직접 예외 메시지 안 적어도 자동 표시가능
    print(e)


try:
    print(div(x, y))
#except ZeroDivisionError as e:     ### 사용자가 요구하지 않는 한, 굳이 안 해도 됨
#    print('0으로 나누면 안돼!')
except Exception as e:      ### 엑셉션 클래스 예외처리는 맨 아래에 있어야 한다
    print(e)

~~~~~~~~~~~
    exit()
finally:
    print('계속되나요. . ?')        # exit() 있어도 finally 실행 뒤 종료됨